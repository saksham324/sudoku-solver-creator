bash -v testing.sh
#!/bin/bash
# testing.sh
# usage: bash -v testing.sh

### invalid arguments

# incorrect number of arguments
./sudoku
Usage: ./sudoku mode difficulty


./sudoku sovle creator yoyoyo
Command must be either `solve` or `create`

# invalid arguments
./sudoku badbadnotgood
Command must be either `solve` or `create`

./sudoku the c crew
Command must be either `solve` or `create`

### testing create

# create easy
./sudoku create easy

-------------------------
| 1 3 2 | 0 0 7 | 0 0 8 | 
| 0 7 0 | 0 8 9 | 1 0 0 | 
| 0 6 0 | 0 3 1 | 0 0 0 | 
-------------------------
| 4 0 7 | 8 2 0 | 9 0 1 | 
| 0 0 6 | 1 9 0 | 0 3 0 | 
| 3 0 9 | 4 0 6 | 5 0 0 | 
-------------------------
| 7 0 0 | 0 0 2 | 0 4 0 | 
| 6 0 0 | 0 1 0 | 0 5 0 | 
| 8 0 5 | 0 0 4 | 0 0 7 | 
-------------------------

# create at level 2
./sudoku create hard

-------------------------
| 1 0 2 | 0 0 7 | 0 0 8 | 
| 0 0 0 | 0 8 0 | 1 0 0 | 
| 0 6 0 | 0 3 0 | 0 0 0 | 
-------------------------
| 4 0 7 | 0 2 0 | 9 0 1 | 
| 0 0 0 | 1 9 0 | 0 3 0 | 
| 0 0 9 | 4 0 6 | 0 0 0 | 
-------------------------
| 0 0 0 | 0 0 2 | 0 0 0 | 
| 6 0 0 | 0 0 0 | 0 5 0 | 
| 8 0 0 | 0 0 4 | 0 0 7 | 
-------------------------

# create outside easy or hard
./sudoku create beginner
Usage: ./sudoku create difficulty


### testing solve

# test with custom visual / from a file
./sudoku solve < test.out 


-------------------------
| 3 4 1 | 5 2 8 | 6 7 9 | 
| 5 7 9 | 1 6 3 | 2 4 8 | 
| 8 2 6 | 7 9 4 | 5 3 1 | 
-------------------------
| 1 5 4 | 3 8 9 | 7 2 6 | 
| 2 8 7 | 4 1 6 | 9 5 3 | 
| 6 9 3 | 2 5 7 | 8 1 4 | 
-------------------------
| 9 3 2 | 8 4 5 | 1 6 7 | 
| 7 1 8 | 6 3 2 | 4 9 5 | 
| 4 6 5 | 9 7 1 | 3 8 2 | 
-------------------------

# test with provided visual
./sudoku solve < test2.out 


-------------------------
| 6 5 8 | 1 2 3 | 7 4 9 | 
| 1 4 9 | 5 6 7 | 3 2 8 | 
| 7 3 2 | 4 8 9 | 1 5 6 | 
-------------------------
| 5 1 7 | 9 3 2 | 6 8 4 | 
| 3 8 6 | 7 4 5 | 9 1 2 | 
| 9 2 4 | 8 1 6 | 5 7 3 | 
-------------------------
| 2 7 5 | 6 9 4 | 8 3 1 | 
| 4 9 1 | 3 5 8 | 2 6 7 | 
| 8 6 3 | 2 7 1 | 4 9 5 | 
-------------------------

# test from an already solved board
./sudoku solve < test3.out


-------------------------
| 1 8 6 | 3 2 5 | 4 9 7 | 
| 4 2 7 | 1 8 9 | 6 3 5 | 
| 5 9 3 | 6 4 7 | 1 8 2 | 
-------------------------
| 3 7 9 | 2 6 4 | 8 5 1 | 
| 6 1 5 | 9 7 8 | 2 4 3 | 
| 8 4 2 | 5 1 3 | 7 6 9 | 
-------------------------
| 7 5 8 | 4 9 1 | 3 2 6 | 
| 2 3 1 | 8 5 6 | 9 7 4 | 
| 9 6 4 | 7 3 2 | 5 1 8 | 
-------------------------

# test with non-unique board
./sudoku solve < test4.out
Board does not have unique solution

# test with a non-existing file
./sudoku solve < test6.out
testing.sh: line 43: test6.out: No such file or directory

### fuzz testing

# fuzz testing solve with 250 boards
./fuzztest 250
Passed 250/250 tests!

# valgrind for memory leak check
valgrind --leak-check=full --show-leak-kinds=all ./sudoku create easy 
==34505== Memcheck, a memory error detector
==34505== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==34505== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==34505== Command: ./sudoku create easy
==34505== 

-------------------------
| 0 7 5 | 2 0 0 | 6 0 0 | 
| 8 2 3 | 0 0 6 | 1 0 0 | 
| 0 0 9 | 0 0 7 | 2 0 0 | 
-------------------------
| 3 9 1 | 0 0 4 | 5 0 0 | 
| 0 0 0 | 8 5 9 | 3 1 0 | 
| 6 0 0 | 3 2 0 | 7 9 0 | 
-------------------------
| 0 0 0 | 0 6 0 | 9 0 7 | 
| 0 3 0 | 7 8 2 | 0 5 0 | 
| 0 0 0 | 0 4 3 | 0 0 0 | 
-------------------------
==34505== 
==34505== HEAP SUMMARY:
==34505==     in use at exit: 0 bytes in 0 blocks
==34505==   total heap usage: 14 allocs, 14 frees, 17,348 bytes allocated
==34505== 
==34505== All heap blocks were freed -- no leaks are possible
==34505== 
==34505== For counts of detected and suppressed errors, rerun with: -v
==34505== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
valgrind --leak-check=full --show-leak-kinds=all ./sudoku create hard 
==34540== Memcheck, a memory error detector
==34540== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==34540== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==34540== Command: ./sudoku create hard
==34540== 

-------------------------
| 0 7 5 | 0 0 0 | 0 0 0 | 
| 0 2 0 | 0 0 6 | 1 0 0 | 
| 0 0 9 | 0 0 0 | 2 0 0 | 
-------------------------
| 3 9 1 | 0 0 0 | 5 0 0 | 
| 0 0 0 | 8 0 0 | 3 0 0 | 
| 6 0 0 | 0 2 0 | 7 9 0 | 
-------------------------
| 0 0 0 | 0 6 0 | 9 0 7 | 
| 0 0 0 | 0 8 2 | 0 5 0 | 
| 0 0 0 | 0 4 3 | 0 0 0 | 
-------------------------
==34540== 
==34540== HEAP SUMMARY:
==34540==     in use at exit: 0 bytes in 0 blocks
==34540==   total heap usage: 14 allocs, 14 frees, 17,348 bytes allocated
==34540== 
==34540== All heap blocks were freed -- no leaks are possible
==34540== 
==34540== For counts of detected and suppressed errors, rerun with: -v
==34540== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
valgrind --leak-check=full --show-leak-kinds=all ./sudoku solve < test.out
==34592== Memcheck, a memory error detector
==34592== Copyright (C) 2002-2017, and GNU GPL'd, by Julian Seward et al.
==34592== Using Valgrind-3.13.0 and LibVEX; rerun with -h for copyright info
==34592== Command: ./sudoku solve
==34592== 


-------------------------
| 3 4 1 | 5 2 8 | 6 7 9 | 
| 5 7 9 | 1 6 3 | 2 4 8 | 
| 8 2 6 | 7 9 4 | 5 3 1 | 
-------------------------
| 1 5 4 | 3 8 9 | 7 2 6 | 
| 2 8 7 | 4 1 6 | 9 5 3 | 
| 6 9 3 | 2 5 7 | 8 1 4 | 
-------------------------
| 9 3 2 | 8 4 5 | 1 6 7 | 
| 7 1 8 | 6 3 2 | 4 9 5 | 
| 4 6 5 | 9 7 1 | 3 8 2 | 
-------------------------
==34592== 
==34592== HEAP SUMMARY:
==34592==     in use at exit: 0 bytes in 0 blocks
==34592==   total heap usage: 15 allocs, 15 frees, 25,540 bytes allocated
==34592== 
==34592== All heap blocks were freed -- no leaks are possible
==34592== 
==34592== For counts of detected and suppressed errors, rerun with: -v
==34592== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 0 from 0)
